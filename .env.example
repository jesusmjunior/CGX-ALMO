# =================================
# CONFIGURAÇÕES DO SISTEMA DE ESTOQUE
# =================================

# ---------------
# BACKEND CONFIG
# ---------------

# Gemini AI Configuration
GEMINI_API_KEY=AIzaSyAI170iCuFZOwJA0fY_zbWqKjJ9t1JTUE8

# Data World Configuration
DATAWORLD_TOKEN=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJweXRob246YWRtamVzdXNpYSIsImlzcyI6ImNsaWVudDpweXRob246YWdlbnQ6YWRtamVzdXNpYTo6OGZhOGQ5ZDYtNjFmOC00YzdmLWFiMWMtYmYxNDM1NDA3MjNmIiwiaWF0IjoxNzQ4MTY2NTM1LCJyb2xlIjpbInVzZXJfYXBpX2FkbWluIiwidXNlcl9hcGlfcmVhZCIsInVzZXJfYXBpX3dyaXRlIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZSwic2FtbCI6e319._zGOiWQmLjGXRdBPOIx-W9JxlrvUn3kHiNTNt70Jr47YEtu8r1wBaS8Se1DyHdU2VSynjGC7_qCBGdBKqXm4Ig

# Database Configuration (if using external DB)
DATABASE_URL=sqlite:///./stock_control.db
# DATABASE_URL=postgresql://user:password@localhost:5432/stock_control

# Application Settings
APP_NAME=Sistema de Controle de Estoque
APP_VERSION=1.0.0
DEBUG=False
SECRET_KEY=your-secret-key-here

# CORS Settings
ALLOWED_ORIGINS=http://localhost:3000,https://your-frontend-domain.vercel.app

# API Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# ---------------
# FRONTEND CONFIG
# ---------------

# API URLs
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_API_URL_PRODUCTION=https://your-backend-api.railway.app

# Application Info
NEXT_PUBLIC_APP_NAME=Sistema de Controle de Estoque
NEXT_PUBLIC_APP_VERSION=1.0.0

# Analytics (optional)
NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX

# Feature Flags
NEXT_PUBLIC_ENABLE_AI_FEATURES=true
NEXT_PUBLIC_ENABLE_DATAWORLD=true
NEXT_PUBLIC_ENABLE_DARK_MODE=false

# ---------------
# DEPLOYMENT CONFIG
# ---------------

# Environment
NODE_ENV=production
ENVIRONMENT=production

# Vercel Settings
VERCEL_PROJECT_ID=your-project-id
VERCEL_ORG_ID=your-org-id

# Railway Settings (if using)
RAILWAY_PROJECT_ID=your-railway-project

# Docker Settings
DOCKER_IMAGE_TAG=latest
DOCKER_REGISTRY=ghcr.io/username

# ---------------
# MONITORING CONFIG
# ---------------

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json

# Sentry (optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30

# ---------------
# SECURITY CONFIG
# ---------------

# JWT Settings (if implementing auth)
JWT_SECRET_KEY=your-jwt-secret
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# SSL/TLS
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# ---------------
# PERFORMANCE CONFIG
# ---------------

# Cache Settings
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=3600

# Worker Settings
WORKER_PROCESSES=1
WORKER_CONNECTIONS=1000

# ---------------
# BACKUP CONFIG
# ---------------

# S3 Backup (optional)
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
AWS_S3_BUCKET=your-backup-bucket
AWS_REGION=us-east-1

# Backup Schedule
BACKUP_ENABLED=true
BACKUP_FREQUENCY=daily
BACKUP_RETENTION_DAYS=30

# ---------------
# NOTIFICATION CONFIG
# ---------------

# Email Settings (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM=noreply@your-domain.com

# Webhook URLs (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/WEBHOOK

# ===============================
# INSTRUÇÕES DE USO
# ===============================

# 1. Copie este arquivo para .env
# 2. Substitua os valores de exemplo pelos reais
# 3. Nunca commite o arquivo .env real
# 4. Para desenvolvimento local, use localhost
# 5. Para produção, use URLs reais dos serviços

# ===============================
# COMANDOS ÚTEIS
# ===============================

# Backend:
# python main.py

# Frontend:
# npm run dev

# Docker:
# docker build -t stock-control .
# docker run -p 8000:8000 --env-file .env stock-control

# Deploy:
# vercel --prod
# railway up
